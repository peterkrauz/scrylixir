name: build

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ master ]

env:
  MIX_ENV: test

jobs:
  slt:
    runs-on: ubuntu-latest
    container: python:3.7-slim

    if: ${{ github.event.issue.pull_request }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Dump GitHub context
        id: github_context_step
        run: echo '${{ toJSON(github) }}'

      - name: Dump job context
        run: echo '${{ toJSON(job) }}'

      - name: Dump steps context
        run: echo '${{ toJSON(steps) }}'

      - name: Dump runner context
        run: echo '${{ toJSON(runner) }}'

      - name: Dump strategy context
        run: echo '${{ toJSON(strategy) }}'

      - name: Dump matrix context
        run: echo '${{ toJSON(matrix) }}'

      - name: Dump more stuff
        run: echo '${{ toJSON($GITHUB_REF) }}'

  test:
    name: build & cqa

    runs-on: ubuntu-latest

    strategy:
      matrix:
        elixir: [1.12.2]
        otp: [24.0.5]

    steps:
    - uses: actions/checkout@v2

    - name: Setup elixir
      uses: erlef/setup-beam@988e02bfe678367a02564f65ca2e37726dc0268f
      with:
        elixir-version: ${{ matrix.elixir }}
        otp-version: ${{ matrix.otp }} 

    - name: Retrieve Mix Dependencies Cache
      uses: actions/cache@v1
      id: mix-cache 
      with:
        path: deps
        key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

    - name: Install Mix Dependencies
      if: steps.mix-cache.outputs.cache-hit != 'true'
      run: |
        mix local.rebar --force
        mix local.hex --force
        mix deps.get
    - name: Check Formatting
      run: mix format --check-formatted

    - name: Run Credo
      run: mix credo --strict

    - name: Run Tests
      run: mix test

    - name: Retrieve PLT Cache
      uses: actions/cache@v2
      id: plt-cache
      with:
        path: priv/plts
        key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-plts-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

    - name: Create PLTs
      if: steps.plt-cache.outputs.cache-hit != 'true'
      run: |
        mkdir -p priv/plts
        mix dialyzer --plt

    - name: Run dialyzer
      run: mix dialyzer --no-check --halt-exit-status