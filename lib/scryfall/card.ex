defmodule Scryfall.Card do
  use Scryfall.Resource

  @moduledoc """

  Card objects represent individual Magic: The Gathering cards that players could obtain
  and add to their collection (with a few minor exceptions).

  Cards are the APIâ€™s most complex object. You are encouraged to thoroughly read this document and also the article about layouts and images.

  API reference: https://scryfall.com/docs/api/cards
  """

  defstruct [
    :id,
    :arena_id,
    :lang,
    :mtgo_id,
    :mtgo_foil_id,
    :multiverse_ids,
    :tcgplayer_id,
    :tcgplayer_etched_id,
    :cardmarket_id,
    :object,
    :oracle_id,
    :prints_search_uri,
    :rulings_uri,
    :scryfall_uri,
    :uri,
    :all_parts,
    :card_faces,
    :cmc,
    :color_identity,
    :color_indicator,
    :colors,
    :edhrec_rank,
    :hand_modifier,
    :keywords,
    :layout,
    :life_modifier,
    :loyalty,
    :mana_cost,
    :name,
    :power,
    :produced_mana,
    :reserved,
    :toughness,
    :type_line,
    :artist,
    :booster,
    :card_back_id,
    :collector_number,
    :content_warning,
    :digital,
    :finishes,
    :nonfoil,
    :flavor_name,
    :flavor_text,
    :frame_effects,
    :frame,
    :full_art,
    :games,
    :highres_image,
    :illustration_id,
    :image_status,
    :image_uris,
    :prices,
    :printed_name,
    :printed_text,
    :printed_type_line,
    :promo,
    :promo_types,
    :purchase_uris,
    :rarity,
    :related_uris,
    :released_at,
    :reprint,
    :scryfall_set_uri,
    :set_name,
    :set_search_uri,
    :set_type,
    :set_uri,
    :set,
    :set_id,
    :story_spotlight,
    :textless,
    :variation,
    :variation_of,
    :security_stamp,
    :watermark,
    :artist_ids,
    oracle_text: nil,
    foil: nil,
    oversized: false,
    legalities: %{},
    border_color: nil,
  ]

  @type colors :: list(String.t())

  @type finishes :: list(String.t())

  @type t :: %__MODULE__{
          id: String.t(),
          arena_id: integer,
          lang: String.t(),
          mtgo_id: integer,
          mtgo_foil_id: integer,
          multiverse_ids: list(integer),
          tcgplayer_id: integer,
          tcgplayer_etched_id: integer,
          cardmarket_id: integer,
          object: String.t(),
          oracle_id: String.t(),
          prints_search_uri: String.t(),
          rulings_uri: String.t(),
          scryfall_uri: String.t(),
          uri: String.t(),
          all_parts: list,
          card_faces: list,
          cmc: float,
          color_identity: colors,
          color_indicator: colors,
          colors: colors,
          edhrec_rank: integer,
          hand_modifier: String.t(),
          keywords: list,
          layout: String.t(),
          legalities: map,
          life_modifier: String.t(),
          loyalty: String.t(),
          mana_cost: String.t(),
          name: String.t(),
          oracle_text: String.t(),
          oversized: boolean,
          power: String.t(),
          produced_mana: colors,
          reserved: boolean,
          toughness: String.t(),
          type_line: String.t(),
          artist: String.t(),
          booster: boolean,
          border_color: String.t(),
          card_back_id: String.t(),
          collector_number: String.t(),
          content_warning: boolean,
          digital: boolean,
          finishes: finishes,
          nonfoil: boolean,
          flavor_name: String.t(),
          flavor_text: String.t(),
          frame_effects: list,
          frame: String.t(),
          full_art: boolean,
          games: list(String.t),
          highres_image: boolean,
          illustration_id: String.t(),
          image_status: String.t(),
          image_uris: map,
          prices: map,
          printed_name: String.t(),
          printed_text: String.t(),
          printed_type_line: String.t(),
          promo: boolean,
          promo_types: list,
          purchase_uris: map,
          rarity: String.t(),
          related_uris: map,
          released_at: String.t(),
          reprint: boolean,
          scryfall_set_uri: String.t(),
          set_name: String.t(),
          set_search_uri: String.t(),
          set_type: String.t(),
          set_uri: String.t(),
          set: String.t(),
          set_id: String.t(),
          story_spotlight: boolean,
          textless: boolean,
          variation: boolean,
          variation_of: String.t(),
          security_stamp: String.t(),
          watermark: String.t(),
          artist_ids: list,
          foil: boolean
        }

  defp base_url, do: "https://api.scryfall.com/cards"

  @spec random :: t
  def random, do: fetch_resource(url: base_url() <> "/random", to: %__MODULE__{})
end
